# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: monitor.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='monitor.proto',
  package='',
  syntax='proto3',
  serialized_pb=_b('\n\rmonitor.proto\"\x1d\n\x0c\x44RegisterReq\x12\r\n\x05macId\x18\x01 \x01(\t\"O\n\x0cSRegisterRsp\x12\x13\n\x0bscribeTopic\x18\x01 \x01(\t\x12\x11\n\tsendTopic\x18\x02 \x01(\t\x12\x17\n\x04gate\x18\x03 \x01(\x0b\x32\t.GateInfo\"\xb9\x01\n\x08GateInfo\x12\x0e\n\x06gateId\x18\x01 \x01(\x05\x12\x11\n\tgateAlias\x18\x02 \x01(\t\x12\x0f\n\x07groupId\x18\x03 \x01(\x05\x12\x10\n\x08latitude\x18\x04 \x01(\x01\x12\x11\n\tlongitude\x18\x05 \x01(\x01\x12\t\n\x01x\x18\x06 \x01(\x01\x12\t\n\x01y\x18\x07 \x01(\x01\x12\x0b\n\x03map\x18\x08 \x01(\t\x12\x0f\n\x07\x61\x64\x64ress\x18\t \x01(\x05\x12\x0f\n\x07\x63hannel\x18\n \x01(\x05\x12\x0f\n\x07netType\x18\x0b \x01(\x05\"\x19\n\tHeartbeat\x12\x0c\n\x04time\x18\x01 \x01(\x05\"\xbf\x05\n\x04Node\x12\x0e\n\x06nodeId\x18\x01 \x01(\x05\x12\x0f\n\x07sensors\x18\x02 \x03(\x05\x12\x0f\n\x07\x61\x64\x64ress\x18\x03 \x01(\x05\x12\x0f\n\x07\x63hannel\x18\x04 \x01(\x05\x12\t\n\x01x\x18\x05 \x01(\x01\x12\t\n\x01y\x18\x06 \x01(\x01\x12\x10\n\x08latitude\x18\x07 \x01(\x01\x12\x11\n\tlongitude\x18\x08 \x01(\x01\"\xb8\x04\n\nSensorType\x12\n\n\x06UNKNOW\x10\x00\x12\x13\n\x0f\x41IR_TEMPERATURE\x10\x01\x12\x10\n\x0c\x41IR_MOISTURE\x10\x02\x12\x10\n\x0c\x41IR_PRESSURE\x10\x03\x12\x14\n\x10SOIL_TEMPERATURE\x10\x04\x12\x11\n\rSOIL_MOISTURE\x10\x05\x12\x10\n\x0cILLUMINATION\x10\x06\x12\x08\n\x04VOLT\x10\x07\x12\x14\n\x10\x41IR_CONDITIONING\x10\x08\x12\n\n\x06\x45VALVE\x10\t\x12\x11\n\rPOWER_VOLTAGE\x10\n\x12\x16\n\x12SOLAR_CELL_VOLTAGE\x10\x0b\x12\r\n\tAIR_SPEED\x10\x0c\x12\x0e\n\nAIR_COURSE\x10\r\x12\x07\n\x03\x43O2\x10\x0e\x12\x07\n\x03GPS\x10\x0f\x12\t\n\x05RELAY\x10\x10\x12\x0c\n\x08\x45\x43URRENT\x10\x11\x12\x08\n\x04\x43\x41RD\x10\x12\x12\x12\n\x0ePOWER_CAPACITY\x10\x13\x12\x12\n\x0ePHOTOSYNTHESIS\x10\x14\x12\x11\n\rRAIN_CAPACITY\x10\x15\x12\n\n\x06TORQUE\x10\x16\x12\x10\n\x0cOIL_PRESSURE\x10\x17\x12\x11\n\rOIL_ALLOWANCE\x10\x18\x12\x15\n\x11WATER_TEMPERATURE\x10\x19\x12\x10\n\x0c\x45NGINE_SPEED\x10\x1a\x12\t\n\x05\x41NGLE\x10\x1b\x12\x14\n\x10\x41NGULAR_VELOCITY\x10\x1c\x12\n\n\x06PM_ONE\x10\x1d\x12\x13\n\x0fPM_TWO_DOT_FIVE\x10\x1e\x12\n\n\x06PM_TEN\x10\x1f\x12\t\n\x05NOISE\x10 \x12\x11\n\rPOWER_PERCENT\x10!\"/\n\x0bSensorCycle\x12\x0e\n\x06sensor\x18\x01 \x01(\x05\x12\x10\n\x08interval\x18\x02 \x01(\x05\"=\n\tNodeCycle\x12\x13\n\x04node\x18\x01 \x01(\x0b\x32\x05.Node\x12\x1b\n\x05\x63ycle\x18\x02 \x03(\x0b\x32\x0c.SensorCycle\"<\n\x0cSCycleSetReq\x12\x19\n\x05\x63ycle\x18\x01 \x03(\x0b\x32\n.NodeCycle\x12\x11\n\ttimestamp\x18\x03 \x01(\x05\"!\n\x0c\x44\x43ycleSetRsp\x12\x11\n\terrorcode\x18\x01 \x01(\x05\"R\n\x0eSSensorCtrlReq\x12\x13\n\x04node\x18\x01 \x01(\x0b\x32\x05.Node\x12\x0e\n\x06sensor\x18\x02 \x01(\x05\x12\x0b\n\x03\x63md\x18\x03 \x01(\x05\x12\x0e\n\x06params\x18\x04 \x01(\x0c\":\n\x15\x41irConditioningParams\x12\x0c\n\x04mode\x18\x01 \x01(\x05\x12\x13\n\x0btemperature\x18\x02 \x01(\x05\"a\n\x0bSensorValue\x12\x13\n\x04node\x18\x01 \x01(\x0b\x32\x05.Node\x12\x0e\n\x06sensor\x18\x02 \x01(\x05\x12\x0e\n\x06value1\x18\x03 \x01(\x01\x12\x0e\n\x06value2\x18\x04 \x01(\x01\x12\r\n\x05\x65xtra\x18\x05 \x01(\x0c\"\x16\n\x04\x43\x61rd\x12\x0e\n\x06number\x18\x01 \x01(\t\"$\n\x0fSSensorValueRsp\x12\x11\n\terrorcode\x18\x01 \x01(\x05\"@\n\x0e\x44SensorCtrlRsp\x12\x11\n\terrorcode\x18\x01 \x01(\x05\x12\x1b\n\x05value\x18\x02 \x01(\x0b\x32\x0c.SensorValue\"#\n\x0e\x44QueryCycleReq\x12\x11\n\ttimestamp\x18\x01 \x01(\x05\"#\n\x0eSQueryCycleRsp\x12\x11\n\ttimestamp\x18\x01 \x01(\x05\"*\n\nDValuesReq\x12\x1c\n\x06values\x18\x01 \x03(\x0b\x32\x0c.SensorValue\"\x1f\n\nSValuesRsp\x12\x11\n\terrorcode\x18\x01 \x01(\x05\"\xae\x02\n\x08GateSend\x12\x0b\n\x03sid\x18\x01 \x01(\x06\x12\x11\n\ttimestamp\x18\x02 \x01(\x05\x12!\n\x08register\x18\x04 \x01(\x0b\x32\r.DRegisterReqH\x00\x12!\n\x08\x63ycleSet\x18\x05 \x01(\x0b\x32\r.DCycleSetRspH\x00\x12%\n\nsensorCtrl\x18\x06 \x01(\x0b\x32\x0f.DSensorCtrlRspH\x00\x12\x1f\n\theartbeat\x18\x07 \x01(\x0b\x32\n.HeartbeatH\x00\x12#\n\x0bsensorValue\x18\x08 \x01(\x0b\x32\x0c.SensorValueH\x00\x12%\n\nqueryCycle\x18\n \x01(\x0b\x32\x0f.DQueryCycleReqH\x00\x12\x1d\n\x06values\x18\x0b \x01(\x0b\x32\x0b.DValuesReqH\x00\x42\t\n\x07payload\"\xb4\x02\n\nServerSend\x12\x0b\n\x03sid\x18\x01 \x01(\x06\x12\x11\n\ttimestamp\x18\x02 \x01(\x05\x12!\n\x08register\x18\x04 \x01(\x0b\x32\r.SRegisterRspH\x00\x12!\n\x08\x63ycleSet\x18\x05 \x01(\x0b\x32\r.SCycleSetReqH\x00\x12%\n\nsensorCtrl\x18\x06 \x01(\x0b\x32\x0f.SSensorCtrlReqH\x00\x12\x1f\n\theartbeat\x18\x07 \x01(\x0b\x32\n.HeartbeatH\x00\x12\'\n\x0bsensorValue\x18\x08 \x01(\x0b\x32\x10.SSensorValueRspH\x00\x12%\n\nqueryCycle\x18\t \x01(\x0b\x32\x0f.SQueryCycleRspH\x00\x12\x1d\n\x06values\x18\x0b \x01(\x0b\x32\x0b.SValuesRspH\x00\x42\t\n\x07payloadB!\n\x1f\x63om.vgulu.server.cloud.protocolb\x06proto3')
)



_NODE_SENSORTYPE = _descriptor.EnumDescriptor(
  name='SensorType',
  full_name='Node.SensorType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOW', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AIR_TEMPERATURE', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AIR_MOISTURE', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AIR_PRESSURE', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SOIL_TEMPERATURE', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SOIL_MOISTURE', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ILLUMINATION', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VOLT', index=7, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AIR_CONDITIONING', index=8, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EVALVE', index=9, number=9,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='POWER_VOLTAGE', index=10, number=10,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SOLAR_CELL_VOLTAGE', index=11, number=11,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AIR_SPEED', index=12, number=12,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AIR_COURSE', index=13, number=13,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CO2', index=14, number=14,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GPS', index=15, number=15,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RELAY', index=16, number=16,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ECURRENT', index=17, number=17,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CARD', index=18, number=18,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='POWER_CAPACITY', index=19, number=19,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PHOTOSYNTHESIS', index=20, number=20,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RAIN_CAPACITY', index=21, number=21,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TORQUE', index=22, number=22,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OIL_PRESSURE', index=23, number=23,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OIL_ALLOWANCE', index=24, number=24,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='WATER_TEMPERATURE', index=25, number=25,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ENGINE_SPEED', index=26, number=26,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ANGLE', index=27, number=27,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ANGULAR_VELOCITY', index=28, number=28,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PM_ONE', index=29, number=29,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PM_TWO_DOT_FIVE', index=30, number=30,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PM_TEN', index=31, number=31,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NOISE', index=32, number=32,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='POWER_PERCENT', index=33, number=33,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=480,
  serialized_end=1048,
)
_sym_db.RegisterEnumDescriptor(_NODE_SENSORTYPE)


_DREGISTERREQ = _descriptor.Descriptor(
  name='DRegisterReq',
  full_name='DRegisterReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='macId', full_name='DRegisterReq.macId', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=17,
  serialized_end=46,
)


_SREGISTERRSP = _descriptor.Descriptor(
  name='SRegisterRsp',
  full_name='SRegisterRsp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='scribeTopic', full_name='SRegisterRsp.scribeTopic', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sendTopic', full_name='SRegisterRsp.sendTopic', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='gate', full_name='SRegisterRsp.gate', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=48,
  serialized_end=127,
)


_GATEINFO = _descriptor.Descriptor(
  name='GateInfo',
  full_name='GateInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='gateId', full_name='GateInfo.gateId', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='gateAlias', full_name='GateInfo.gateAlias', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='groupId', full_name='GateInfo.groupId', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='latitude', full_name='GateInfo.latitude', index=3,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='longitude', full_name='GateInfo.longitude', index=4,
      number=5, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='x', full_name='GateInfo.x', index=5,
      number=6, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='y', full_name='GateInfo.y', index=6,
      number=7, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='map', full_name='GateInfo.map', index=7,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='address', full_name='GateInfo.address', index=8,
      number=9, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='channel', full_name='GateInfo.channel', index=9,
      number=10, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='netType', full_name='GateInfo.netType', index=10,
      number=11, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=130,
  serialized_end=315,
)


_HEARTBEAT = _descriptor.Descriptor(
  name='Heartbeat',
  full_name='Heartbeat',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='time', full_name='Heartbeat.time', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=317,
  serialized_end=342,
)


_NODE = _descriptor.Descriptor(
  name='Node',
  full_name='Node',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='nodeId', full_name='Node.nodeId', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sensors', full_name='Node.sensors', index=1,
      number=2, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='address', full_name='Node.address', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='channel', full_name='Node.channel', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='x', full_name='Node.x', index=4,
      number=5, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='y', full_name='Node.y', index=5,
      number=6, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='latitude', full_name='Node.latitude', index=6,
      number=7, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='longitude', full_name='Node.longitude', index=7,
      number=8, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _NODE_SENSORTYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=345,
  serialized_end=1048,
)


_SENSORCYCLE = _descriptor.Descriptor(
  name='SensorCycle',
  full_name='SensorCycle',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sensor', full_name='SensorCycle.sensor', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='interval', full_name='SensorCycle.interval', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1050,
  serialized_end=1097,
)


_NODECYCLE = _descriptor.Descriptor(
  name='NodeCycle',
  full_name='NodeCycle',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='node', full_name='NodeCycle.node', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='cycle', full_name='NodeCycle.cycle', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1099,
  serialized_end=1160,
)


_SCYCLESETREQ = _descriptor.Descriptor(
  name='SCycleSetReq',
  full_name='SCycleSetReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='cycle', full_name='SCycleSetReq.cycle', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='SCycleSetReq.timestamp', index=1,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1162,
  serialized_end=1222,
)


_DCYCLESETRSP = _descriptor.Descriptor(
  name='DCycleSetRsp',
  full_name='DCycleSetRsp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='errorcode', full_name='DCycleSetRsp.errorcode', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1224,
  serialized_end=1257,
)


_SSENSORCTRLREQ = _descriptor.Descriptor(
  name='SSensorCtrlReq',
  full_name='SSensorCtrlReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='node', full_name='SSensorCtrlReq.node', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sensor', full_name='SSensorCtrlReq.sensor', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='cmd', full_name='SSensorCtrlReq.cmd', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='params', full_name='SSensorCtrlReq.params', index=3,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1259,
  serialized_end=1341,
)


_AIRCONDITIONINGPARAMS = _descriptor.Descriptor(
  name='AirConditioningParams',
  full_name='AirConditioningParams',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='mode', full_name='AirConditioningParams.mode', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='temperature', full_name='AirConditioningParams.temperature', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1343,
  serialized_end=1401,
)


_SENSORVALUE = _descriptor.Descriptor(
  name='SensorValue',
  full_name='SensorValue',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='node', full_name='SensorValue.node', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sensor', full_name='SensorValue.sensor', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value1', full_name='SensorValue.value1', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value2', full_name='SensorValue.value2', index=3,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='extra', full_name='SensorValue.extra', index=4,
      number=5, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1403,
  serialized_end=1500,
)


_CARD = _descriptor.Descriptor(
  name='Card',
  full_name='Card',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='number', full_name='Card.number', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1502,
  serialized_end=1524,
)


_SSENSORVALUERSP = _descriptor.Descriptor(
  name='SSensorValueRsp',
  full_name='SSensorValueRsp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='errorcode', full_name='SSensorValueRsp.errorcode', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1526,
  serialized_end=1562,
)


_DSENSORCTRLRSP = _descriptor.Descriptor(
  name='DSensorCtrlRsp',
  full_name='DSensorCtrlRsp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='errorcode', full_name='DSensorCtrlRsp.errorcode', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='DSensorCtrlRsp.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1564,
  serialized_end=1628,
)


_DQUERYCYCLEREQ = _descriptor.Descriptor(
  name='DQueryCycleReq',
  full_name='DQueryCycleReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='DQueryCycleReq.timestamp', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1630,
  serialized_end=1665,
)


_SQUERYCYCLERSP = _descriptor.Descriptor(
  name='SQueryCycleRsp',
  full_name='SQueryCycleRsp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='SQueryCycleRsp.timestamp', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1667,
  serialized_end=1702,
)


_DVALUESREQ = _descriptor.Descriptor(
  name='DValuesReq',
  full_name='DValuesReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='values', full_name='DValuesReq.values', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1704,
  serialized_end=1746,
)


_SVALUESRSP = _descriptor.Descriptor(
  name='SValuesRsp',
  full_name='SValuesRsp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='errorcode', full_name='SValuesRsp.errorcode', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1748,
  serialized_end=1779,
)


_GATESEND = _descriptor.Descriptor(
  name='GateSend',
  full_name='GateSend',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sid', full_name='GateSend.sid', index=0,
      number=1, type=6, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='GateSend.timestamp', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='register', full_name='GateSend.register', index=2,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='cycleSet', full_name='GateSend.cycleSet', index=3,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sensorCtrl', full_name='GateSend.sensorCtrl', index=4,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='heartbeat', full_name='GateSend.heartbeat', index=5,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sensorValue', full_name='GateSend.sensorValue', index=6,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='queryCycle', full_name='GateSend.queryCycle', index=7,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='values', full_name='GateSend.values', index=8,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='payload', full_name='GateSend.payload',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1782,
  serialized_end=2084,
)


_SERVERSEND = _descriptor.Descriptor(
  name='ServerSend',
  full_name='ServerSend',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sid', full_name='ServerSend.sid', index=0,
      number=1, type=6, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='ServerSend.timestamp', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='register', full_name='ServerSend.register', index=2,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='cycleSet', full_name='ServerSend.cycleSet', index=3,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sensorCtrl', full_name='ServerSend.sensorCtrl', index=4,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='heartbeat', full_name='ServerSend.heartbeat', index=5,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sensorValue', full_name='ServerSend.sensorValue', index=6,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='queryCycle', full_name='ServerSend.queryCycle', index=7,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='values', full_name='ServerSend.values', index=8,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='payload', full_name='ServerSend.payload',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=2087,
  serialized_end=2395,
)

_SREGISTERRSP.fields_by_name['gate'].message_type = _GATEINFO
_NODE_SENSORTYPE.containing_type = _NODE
_NODECYCLE.fields_by_name['node'].message_type = _NODE
_NODECYCLE.fields_by_name['cycle'].message_type = _SENSORCYCLE
_SCYCLESETREQ.fields_by_name['cycle'].message_type = _NODECYCLE
_SSENSORCTRLREQ.fields_by_name['node'].message_type = _NODE
_SENSORVALUE.fields_by_name['node'].message_type = _NODE
_DSENSORCTRLRSP.fields_by_name['value'].message_type = _SENSORVALUE
_DVALUESREQ.fields_by_name['values'].message_type = _SENSORVALUE
_GATESEND.fields_by_name['register'].message_type = _DREGISTERREQ
_GATESEND.fields_by_name['cycleSet'].message_type = _DCYCLESETRSP
_GATESEND.fields_by_name['sensorCtrl'].message_type = _DSENSORCTRLRSP
_GATESEND.fields_by_name['heartbeat'].message_type = _HEARTBEAT
_GATESEND.fields_by_name['sensorValue'].message_type = _SENSORVALUE
_GATESEND.fields_by_name['queryCycle'].message_type = _DQUERYCYCLEREQ
_GATESEND.fields_by_name['values'].message_type = _DVALUESREQ
_GATESEND.oneofs_by_name['payload'].fields.append(
  _GATESEND.fields_by_name['register'])
_GATESEND.fields_by_name['register'].containing_oneof = _GATESEND.oneofs_by_name['payload']
_GATESEND.oneofs_by_name['payload'].fields.append(
  _GATESEND.fields_by_name['cycleSet'])
_GATESEND.fields_by_name['cycleSet'].containing_oneof = _GATESEND.oneofs_by_name['payload']
_GATESEND.oneofs_by_name['payload'].fields.append(
  _GATESEND.fields_by_name['sensorCtrl'])
_GATESEND.fields_by_name['sensorCtrl'].containing_oneof = _GATESEND.oneofs_by_name['payload']
_GATESEND.oneofs_by_name['payload'].fields.append(
  _GATESEND.fields_by_name['heartbeat'])
_GATESEND.fields_by_name['heartbeat'].containing_oneof = _GATESEND.oneofs_by_name['payload']
_GATESEND.oneofs_by_name['payload'].fields.append(
  _GATESEND.fields_by_name['sensorValue'])
_GATESEND.fields_by_name['sensorValue'].containing_oneof = _GATESEND.oneofs_by_name['payload']
_GATESEND.oneofs_by_name['payload'].fields.append(
  _GATESEND.fields_by_name['queryCycle'])
_GATESEND.fields_by_name['queryCycle'].containing_oneof = _GATESEND.oneofs_by_name['payload']
_GATESEND.oneofs_by_name['payload'].fields.append(
  _GATESEND.fields_by_name['values'])
_GATESEND.fields_by_name['values'].containing_oneof = _GATESEND.oneofs_by_name['payload']
_SERVERSEND.fields_by_name['register'].message_type = _SREGISTERRSP
_SERVERSEND.fields_by_name['cycleSet'].message_type = _SCYCLESETREQ
_SERVERSEND.fields_by_name['sensorCtrl'].message_type = _SSENSORCTRLREQ
_SERVERSEND.fields_by_name['heartbeat'].message_type = _HEARTBEAT
_SERVERSEND.fields_by_name['sensorValue'].message_type = _SSENSORVALUERSP
_SERVERSEND.fields_by_name['queryCycle'].message_type = _SQUERYCYCLERSP
_SERVERSEND.fields_by_name['values'].message_type = _SVALUESRSP
_SERVERSEND.oneofs_by_name['payload'].fields.append(
  _SERVERSEND.fields_by_name['register'])
_SERVERSEND.fields_by_name['register'].containing_oneof = _SERVERSEND.oneofs_by_name['payload']
_SERVERSEND.oneofs_by_name['payload'].fields.append(
  _SERVERSEND.fields_by_name['cycleSet'])
_SERVERSEND.fields_by_name['cycleSet'].containing_oneof = _SERVERSEND.oneofs_by_name['payload']
_SERVERSEND.oneofs_by_name['payload'].fields.append(
  _SERVERSEND.fields_by_name['sensorCtrl'])
_SERVERSEND.fields_by_name['sensorCtrl'].containing_oneof = _SERVERSEND.oneofs_by_name['payload']
_SERVERSEND.oneofs_by_name['payload'].fields.append(
  _SERVERSEND.fields_by_name['heartbeat'])
_SERVERSEND.fields_by_name['heartbeat'].containing_oneof = _SERVERSEND.oneofs_by_name['payload']
_SERVERSEND.oneofs_by_name['payload'].fields.append(
  _SERVERSEND.fields_by_name['sensorValue'])
_SERVERSEND.fields_by_name['sensorValue'].containing_oneof = _SERVERSEND.oneofs_by_name['payload']
_SERVERSEND.oneofs_by_name['payload'].fields.append(
  _SERVERSEND.fields_by_name['queryCycle'])
_SERVERSEND.fields_by_name['queryCycle'].containing_oneof = _SERVERSEND.oneofs_by_name['payload']
_SERVERSEND.oneofs_by_name['payload'].fields.append(
  _SERVERSEND.fields_by_name['values'])
_SERVERSEND.fields_by_name['values'].containing_oneof = _SERVERSEND.oneofs_by_name['payload']
DESCRIPTOR.message_types_by_name['DRegisterReq'] = _DREGISTERREQ
DESCRIPTOR.message_types_by_name['SRegisterRsp'] = _SREGISTERRSP
DESCRIPTOR.message_types_by_name['GateInfo'] = _GATEINFO
DESCRIPTOR.message_types_by_name['Heartbeat'] = _HEARTBEAT
DESCRIPTOR.message_types_by_name['Node'] = _NODE
DESCRIPTOR.message_types_by_name['SensorCycle'] = _SENSORCYCLE
DESCRIPTOR.message_types_by_name['NodeCycle'] = _NODECYCLE
DESCRIPTOR.message_types_by_name['SCycleSetReq'] = _SCYCLESETREQ
DESCRIPTOR.message_types_by_name['DCycleSetRsp'] = _DCYCLESETRSP
DESCRIPTOR.message_types_by_name['SSensorCtrlReq'] = _SSENSORCTRLREQ
DESCRIPTOR.message_types_by_name['AirConditioningParams'] = _AIRCONDITIONINGPARAMS
DESCRIPTOR.message_types_by_name['SensorValue'] = _SENSORVALUE
DESCRIPTOR.message_types_by_name['Card'] = _CARD
DESCRIPTOR.message_types_by_name['SSensorValueRsp'] = _SSENSORVALUERSP
DESCRIPTOR.message_types_by_name['DSensorCtrlRsp'] = _DSENSORCTRLRSP
DESCRIPTOR.message_types_by_name['DQueryCycleReq'] = _DQUERYCYCLEREQ
DESCRIPTOR.message_types_by_name['SQueryCycleRsp'] = _SQUERYCYCLERSP
DESCRIPTOR.message_types_by_name['DValuesReq'] = _DVALUESREQ
DESCRIPTOR.message_types_by_name['SValuesRsp'] = _SVALUESRSP
DESCRIPTOR.message_types_by_name['GateSend'] = _GATESEND
DESCRIPTOR.message_types_by_name['ServerSend'] = _SERVERSEND
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

DRegisterReq = _reflection.GeneratedProtocolMessageType('DRegisterReq', (_message.Message,), dict(
  DESCRIPTOR = _DREGISTERREQ,
  __module__ = 'monitor_pb2'
  # @@protoc_insertion_point(class_scope:DRegisterReq)
  ))
_sym_db.RegisterMessage(DRegisterReq)

SRegisterRsp = _reflection.GeneratedProtocolMessageType('SRegisterRsp', (_message.Message,), dict(
  DESCRIPTOR = _SREGISTERRSP,
  __module__ = 'monitor_pb2'
  # @@protoc_insertion_point(class_scope:SRegisterRsp)
  ))
_sym_db.RegisterMessage(SRegisterRsp)

GateInfo = _reflection.GeneratedProtocolMessageType('GateInfo', (_message.Message,), dict(
  DESCRIPTOR = _GATEINFO,
  __module__ = 'monitor_pb2'
  # @@protoc_insertion_point(class_scope:GateInfo)
  ))
_sym_db.RegisterMessage(GateInfo)

Heartbeat = _reflection.GeneratedProtocolMessageType('Heartbeat', (_message.Message,), dict(
  DESCRIPTOR = _HEARTBEAT,
  __module__ = 'monitor_pb2'
  # @@protoc_insertion_point(class_scope:Heartbeat)
  ))
_sym_db.RegisterMessage(Heartbeat)

Node = _reflection.GeneratedProtocolMessageType('Node', (_message.Message,), dict(
  DESCRIPTOR = _NODE,
  __module__ = 'monitor_pb2'
  # @@protoc_insertion_point(class_scope:Node)
  ))
_sym_db.RegisterMessage(Node)

SensorCycle = _reflection.GeneratedProtocolMessageType('SensorCycle', (_message.Message,), dict(
  DESCRIPTOR = _SENSORCYCLE,
  __module__ = 'monitor_pb2'
  # @@protoc_insertion_point(class_scope:SensorCycle)
  ))
_sym_db.RegisterMessage(SensorCycle)

NodeCycle = _reflection.GeneratedProtocolMessageType('NodeCycle', (_message.Message,), dict(
  DESCRIPTOR = _NODECYCLE,
  __module__ = 'monitor_pb2'
  # @@protoc_insertion_point(class_scope:NodeCycle)
  ))
_sym_db.RegisterMessage(NodeCycle)

SCycleSetReq = _reflection.GeneratedProtocolMessageType('SCycleSetReq', (_message.Message,), dict(
  DESCRIPTOR = _SCYCLESETREQ,
  __module__ = 'monitor_pb2'
  # @@protoc_insertion_point(class_scope:SCycleSetReq)
  ))
_sym_db.RegisterMessage(SCycleSetReq)

DCycleSetRsp = _reflection.GeneratedProtocolMessageType('DCycleSetRsp', (_message.Message,), dict(
  DESCRIPTOR = _DCYCLESETRSP,
  __module__ = 'monitor_pb2'
  # @@protoc_insertion_point(class_scope:DCycleSetRsp)
  ))
_sym_db.RegisterMessage(DCycleSetRsp)

SSensorCtrlReq = _reflection.GeneratedProtocolMessageType('SSensorCtrlReq', (_message.Message,), dict(
  DESCRIPTOR = _SSENSORCTRLREQ,
  __module__ = 'monitor_pb2'
  # @@protoc_insertion_point(class_scope:SSensorCtrlReq)
  ))
_sym_db.RegisterMessage(SSensorCtrlReq)

AirConditioningParams = _reflection.GeneratedProtocolMessageType('AirConditioningParams', (_message.Message,), dict(
  DESCRIPTOR = _AIRCONDITIONINGPARAMS,
  __module__ = 'monitor_pb2'
  # @@protoc_insertion_point(class_scope:AirConditioningParams)
  ))
_sym_db.RegisterMessage(AirConditioningParams)

SensorValue = _reflection.GeneratedProtocolMessageType('SensorValue', (_message.Message,), dict(
  DESCRIPTOR = _SENSORVALUE,
  __module__ = 'monitor_pb2'
  # @@protoc_insertion_point(class_scope:SensorValue)
  ))
_sym_db.RegisterMessage(SensorValue)

Card = _reflection.GeneratedProtocolMessageType('Card', (_message.Message,), dict(
  DESCRIPTOR = _CARD,
  __module__ = 'monitor_pb2'
  # @@protoc_insertion_point(class_scope:Card)
  ))
_sym_db.RegisterMessage(Card)

SSensorValueRsp = _reflection.GeneratedProtocolMessageType('SSensorValueRsp', (_message.Message,), dict(
  DESCRIPTOR = _SSENSORVALUERSP,
  __module__ = 'monitor_pb2'
  # @@protoc_insertion_point(class_scope:SSensorValueRsp)
  ))
_sym_db.RegisterMessage(SSensorValueRsp)

DSensorCtrlRsp = _reflection.GeneratedProtocolMessageType('DSensorCtrlRsp', (_message.Message,), dict(
  DESCRIPTOR = _DSENSORCTRLRSP,
  __module__ = 'monitor_pb2'
  # @@protoc_insertion_point(class_scope:DSensorCtrlRsp)
  ))
_sym_db.RegisterMessage(DSensorCtrlRsp)

DQueryCycleReq = _reflection.GeneratedProtocolMessageType('DQueryCycleReq', (_message.Message,), dict(
  DESCRIPTOR = _DQUERYCYCLEREQ,
  __module__ = 'monitor_pb2'
  # @@protoc_insertion_point(class_scope:DQueryCycleReq)
  ))
_sym_db.RegisterMessage(DQueryCycleReq)

SQueryCycleRsp = _reflection.GeneratedProtocolMessageType('SQueryCycleRsp', (_message.Message,), dict(
  DESCRIPTOR = _SQUERYCYCLERSP,
  __module__ = 'monitor_pb2'
  # @@protoc_insertion_point(class_scope:SQueryCycleRsp)
  ))
_sym_db.RegisterMessage(SQueryCycleRsp)

DValuesReq = _reflection.GeneratedProtocolMessageType('DValuesReq', (_message.Message,), dict(
  DESCRIPTOR = _DVALUESREQ,
  __module__ = 'monitor_pb2'
  # @@protoc_insertion_point(class_scope:DValuesReq)
  ))
_sym_db.RegisterMessage(DValuesReq)

SValuesRsp = _reflection.GeneratedProtocolMessageType('SValuesRsp', (_message.Message,), dict(
  DESCRIPTOR = _SVALUESRSP,
  __module__ = 'monitor_pb2'
  # @@protoc_insertion_point(class_scope:SValuesRsp)
  ))
_sym_db.RegisterMessage(SValuesRsp)

GateSend = _reflection.GeneratedProtocolMessageType('GateSend', (_message.Message,), dict(
  DESCRIPTOR = _GATESEND,
  __module__ = 'monitor_pb2'
  # @@protoc_insertion_point(class_scope:GateSend)
  ))
_sym_db.RegisterMessage(GateSend)

ServerSend = _reflection.GeneratedProtocolMessageType('ServerSend', (_message.Message,), dict(
  DESCRIPTOR = _SERVERSEND,
  __module__ = 'monitor_pb2'
  # @@protoc_insertion_point(class_scope:ServerSend)
  ))
_sym_db.RegisterMessage(ServerSend)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\037com.vgulu.server.cloud.protocol'))
# @@protoc_insertion_point(module_scope)
